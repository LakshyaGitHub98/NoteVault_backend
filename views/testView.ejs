<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>System Files Viewer</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      padding: 30px;
      background-color: #f9f9f9;
    }
    h2 {
      color: #4B0082;
    }
    form {
      margin-bottom: 20px;
    }
    input[type="text"] {
      padding: 8px;
      width: 300px;
      border: 1px solid #ccc;
      border-radius: 4px;
    }
    button {
      padding: 8px 16px;
      background-color: #4B0082;
      color: white;
      border: none;
      border-radius: 4px;
      cursor: pointer;
      margin-left: 8px;
    }
    button:hover {
      background-color: #5e00a3;
    }
    #fileList div {
      background: white;
      padding: 12px;
      margin-bottom: 10px;
      border-radius: 6px;
      box-shadow: 0 0 5px rgba(0,0,0,0.1);
      display: flex;
      align-items: center;
      justify-content: space-between;
    }
    a {
      color: #4B0082;
      text-decoration: underline;
      margin-right: 10px;
    }
    .error {
      color: red;
    }
    .loading {
      color: #555;
    }
    .file-info {
      flex-grow: 1;
    }
  </style>
</head>
<body>
  <h2>System-Uploaded Files</h2>
  <form id="viewForm">
    <input type="text" id="userId" placeholder="Enter User ID" required />
    <button type="submit">View</button>
  </form>

  <div id="fileList"></div>

  <script>
    const fileList = document.getElementById('fileList');

    async function fetchFiles(userId) {
      fileList.innerHTML = '<p class="loading">Loading files...</p>';

      try {
        const res = await fetch('/api/file/files/viewSystemUploadedFiles', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({ userId }),
        });

        const text = await res.text();
        if (!res.ok) throw new Error(text || 'Failed to fetch files');

        const { systemFiles } = JSON.parse(text);

        if (!systemFiles?.length) {
          fileList.innerHTML = '<p>No files found.</p>';
          return;
        }

        fileList.innerHTML = systemFiles
          .map(
            (f) => `
            <div id="file-${f._id}">
              <div class="file-info">
                <p><strong>${f.filename}</strong></p>
                <a href="/api/file/${f._id}/view" target="_blank">Open</a>
                <p>Uploaded on: ${new Date(f.uploadDate).toLocaleString()}</p>
              </div>
              <button onclick="deleteFile('${userId}', '${f._id}')">Delete</button>
            </div>`
          )
          .join('');
      } catch (err) {
        console.error('‚ùå Fetch error:', err);
        fileList.innerHTML = `<p class="error">Error: ${err.message}</p>`;
      }
    }

    async function deleteFile(userId, fileId) {
      if (!confirm('Are you sure you want to delete this file?')) return;

      try {
        const res = await fetch(`/api/file/user/${userId}/file/${fileId}`, {
          method: 'DELETE',
        });

        const data = await res.json();
        if (!res.ok) throw new Error(data.error || 'Failed to delete file');

        alert(data.message || 'File deleted successfully');
        // Remove the file div from UI
        const fileDiv = document.getElementById(`file-${fileId}`);
        if (fileDiv) fileDiv.remove();
      } catch (err) {
        alert(`Error deleting file: ${err.message}`);
      }
    }

    document.getElementById('viewForm').addEventListener('submit', (e) => {
      e.preventDefault();
      const userId = document.getElementById('userId').value.trim();
      if (userId) fetchFiles(userId);
    });
  </script>
</body>
</html>
